* CheatSheet: Jenkins & Groovy                                    :Languages:
:PROPERTIES:
:type:     language
:export_file_name: cheatsheet-jenkins-groovy-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/Sangwan70/jenkins-groovy"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/rnsangwan/"><img src="https://scontent-sea1-1.xx.fbcdn.net/v/t1.6435-9/67936488_1333790973453736_1200047500686262272_n.jpg?_nc_cat=104&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=1sQ9JhWjxPYAX_3gDmC&_nc_ht=scontent-sea1-1.xx&oh=00_AT-szZPlXZ6zrhw1cD2n4eiPAmh2SkSfYs3RDUO9U6V47w&oe=62131715" width="200" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.rnsangwan.com">Check my Profile</a></div>
<br/><br/>
#+END_HTML

- Online Training URL: [[https://https://www.theskillpedia.com][The SkillPedia]]

File me [[https://github.com/Sangwan70/jenkins-groovy/issues][Issues]] or star [[https://github.com/Sangwan70/jenkins-groovy][this repo]].
** Jenkins Pipeline
| Name                                      | Comment                                                                   |
|-------------------------------------------+---------------------------------------------------------------------------|
| Specify parameter to run jobs             | =build job:'job1', parameters:[string(name:'name1', value:va1)]=          |
| Run job in different agents               | =node($agent_label) {...}=                                                |
| Ask for user input                        | =stage('stage2'){ input "OK to go?" }=                                    |
| Actively fail current pipeline job        | =error("Build failed because of this and that..")=                        |
| List all Jenkins plugins and versions     | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/list-all-plugins.groovy][list-all-plugins.groovy]]                                                   |
| [[https://stackoverflow.com/questions/43875093/check-if-property-exists-groovy][Check whether property exists]]             | =if (env.keep_failed_env)=                                                |
| [[https://stackoverflow.com/questions/47039924/jenkins-pipeline-enable-timestamps-in-build-log-console][Jenkins Pipeline enable timestamps]]        | =options{timestamps()}=                                                   |
| [[https://jenkins.io/doc/pipeline/steps/workflow-basic-steps/#code-withenv-code-set-environment-variables][Set envs within a jenkins pipeline]]        | =withEnv(["key1=$var1"])=                                                 |
| Install plugin via groovy                 | =Hudson.instance.updateCenter.getPlugin(plugin).deploy().get()=           |
| Keep previous job run via groovy          | =buildDiscarder(logRotator(daysToKeepStr: '20', numToKeepStr: '60'))=     |
| [[https://jenkins.io/doc/book/pipeline/syntax/][Customize job workspace]]                   | =customWorkspace "/some/other/path"=                                      |
| [[https://jenkins.io/doc/pipeline/steps/workflow-scm-step/][git scm checkout to relative directory]]    | =extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'XXX']]= |
| Keep going when previous stage has failed | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/keep-going-with-errors.groovy][keep-going-with-errors.groovy]]                                             |
| Send slack notification in pipeline       | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/slack-notification.groovy][slack-notification.groovy]]                                                 |
| Pass parameter across jenkins jobs        | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkinsfile-pass-parameter.groovy][jenkinsfile-pass-parameter.groovy]]                                         |
| Set timeout & retry                       | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkinsfile-timeout-retry.groovy][jenkinsfile-timeout-retry.groovy]]                                          |
| Use finally to do cleanup                 | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkinsfile-finally.groovy][jenkinsfile-finally.groovy]]                                                |
| Run jenkins jobs in a sequential way      | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkinsfile-sequentially.groovy][jenkinsfile-sequentially.groovy]]                                           |
| Run jenkins jobs in parallel              | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkinsfile-parallelly.groovy][jenkinsfile-parallelly.groovy]]                                             |
| Reference                                 | [[https://github.com/jenkinsci/pipeline-model-definition-plugin/wiki/Syntax-Reference][Link: Syntax Reference]], [[https://jenkins.io/doc/][Link: Jenkins User Documentation]]                  |
| Reference                                 | [[http://docs.groovy-lang.org/latest/html/documentation/][Link: Groovy Language Documentation]]                                       |
| Reference                                 | [[https://gist.github.com/jonico/e205b16cf07451b2f475543cf1541e70][Link: Example]], [[https://gist.github.com/vdupain/832964527b4b8d7d4c648169dae8c656][Link: Example]]                                              |
** Config Jenkins Via Groovy
| Name                                 | Comment                                                                                   |
|--------------------------------------+-------------------------------------------------------------------------------------------|
| Set timezone for jenkins             | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/timezone.groovy][timezone.groovy]]                                                                           |
| Set timezone for jenkins             | =System.setProperty('org.apache.commons.jelly.tags.fmt.timeZone', 'America/Los_Angeles')= |
| Configure default view               | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins-views.groovy][jenkins-views.groovy]]                                                                      |
| Configure Jenkins url                | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins-url.groovy][jenkins-url.groovy]]                                                                        |
| Create a Jenkins user                | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/create-jenkins-user.groovy][create-jenkins-user.groovy]]                                                                |
| Groovy manages files/folders         | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/files-folder.groovy][files-folder.groovy]]                                                                       |
| Configure max executors in Jenkins   | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/master-executors.groovy][master-executors.groovy]]                                                                   |
| Configure only 1 executor per worker | For each agent, configure # of executors                                                  |
| Configure slack plugin               | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/config-slack.groovy][config-slack.groovy]]                                                                       |
| Configure pipeline shared libraries  | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/config-pipeline-library.groovy][config-pipeline-library.groovy]]                                                            |
| [[https://stackoverflow.com/questions/34585356/get-jenkins-version-via-java-jar-jenkins-war-version-without-spam-output][Get jenkins version from CLI]]         | =java -jar /usr/share/jenkins/jenkins.war --version=                                      |
| Reference                            | [[https://github.com/cloudbees/jenkins-scripts][GitHub: cloudbees/jenkins-scripts]], [[https://github.com/jenkinsci/pipeline-examples][GitHub: jenkinsci/pipeline-examples]]                    |
** Jenkins Trouble Shooting
| Name                                             | Comment                   |
|--------------------------------------------------+---------------------------|
| List performance metrics for each Jenkins agents | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/list-all-jenkins-agent.sh][list-all-jenkins-agent.sh]] |
** Jenkins Kubernetes Via Groovy
| Name                                | Comment                                     |
|-------------------------------------+---------------------------------------------|
| Config jenkins kubernetes plugin    | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins-kubernetes-cloud.groovy][jenkins-kubernetes-cloud.groovy]]             |
| Validate Kubernetes jenkins setup   | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/validate-kubernetes-cloud.groovy][validate-kubernetes-cloud.groovy]]            |
| Kubernetes run with envs configured | [[https://github.com/jenkinsci/kubernetes-plugin/blob/master/src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runWithEnvVariables.groovy][runWithEnvVariables.groovy]]                  |
| Reference                           | [[https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline][GitHub: kubernetes-plugin pipeline examples]] |
** Jenkins View Via Groovy
| Name                                    | Comment                                                                    |
|-----------------------------------------+----------------------------------------------------------------------------|
| [[https://javadoc.jenkins.io/hudson/model/ListView.html#setIncludeRegex-java.lang.String-][Add a list of jobs by regexp to a view]]  | =myView.setIncludeRegex(".*Integration.*")=, [[https://github.com/Sangwan70/jenkins-groovy/blob/master/addjobstoview-byregexp.groovy][addjobstoview-byregexp.groovy]] |
| Create jenkins views and add jobs to it | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins-views.groovy][jenkins-views.groovy]]                                                       |
| [[https://github.com/jan-molak/jenkins-build-monitor-plugin/blob/master/build-monitor-plugin/src/main/java/com/smartcodeltd/jenkinsci/plugins/buildmonitor/BuildMonitorView.java][Add a view of build monitor view plugin]] | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/build-monitor-views.xml][build-monitor-views.xml]]                                                    |
| [[https://stackoverflow.com/questions/39111350/how-to-set-a-views-description-in-groovy][Change view description in groovy]]       | =myView.doSubmitDescription=                                               |
** Jenkins Job Via Groovy
| Name                                            | Comment                                                 |
|-------------------------------------------------+---------------------------------------------------------|
| List all my jenkins jobs                        | =println Jenkins.instance.projects.collect { it.name }= |
| List all jenkins jobs                           | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/list-all-jobs.groovy][list-all-jobs.groovy]]                                    |
| Create and trigger a job                        | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/create-jenkins-job.groovy][create-jenkins-job.groovy]]                               |
| Manage jenkins jobs                             | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/manage-jenkins-jobs.groovy][manage-jenkins-jobs.groovy]]                              |
| Cancel queued jenkins jobs by regexp            | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/kill-queued-jenkins.groovy][kill-queued-jenkins.groovy]]                              |
| [[https://stackoverflow.com/questions/33821217/html-in-jenkins-job-descriptions][Support HTML for job and parameter descriptions]] | [[https://wiki.jenkins.io/display/JENKINS/OWASP+Markup+Formatter+Plugin][Link: OWASP Markup Formatter Plugin]]                     |
** Jenkins Different Parameters
| Name     | Comment                                                                              |
|----------+--------------------------------------------------------------------------------------|
| string   | =string(name: 'key1', defaultValue: 'Default value', description: 'some parameter')= |
| text     | =text(name: 'key1', defaultValue: 'Default value', description: 'some parameter')=   |
| boolean  | =booleanParam(name: 'key1', defaultValue: true, description: 'some parameter')=      |
| choice   | =choice(name: 'key1', choices: 'One\nTwo\nThree\n', description: 'some parameter')=  |
| password | =password(name: 'key1', defaultValue: 'SECRET', description: 'Enter a password')=    |
| file     | =file(name: 'key1', description: 'Choose a file to upload')=                         |
** Jenkins Security Via Groovy
| Name                                     | Comment                                                          |
|------------------------------------------+------------------------------------------------------------------|
| logged-in users can do anything          | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/logged-in-users.groovy][logged-in-users.groovy]]                                           |
| [[https://wiki.jenkins.io/display/JENKINS/LDAP+Plugin][Enable ldap in Jenkins]]                   | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/enable-ldap.groovy][enable-ldap.groovy]]                                               |
| Create a jenkins secret text             | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/create-secret-text.groovy][create-secret-text.groovy]]                                        |
| Configure authorization in Jenkins       | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/matrix-authorization-strategy.groovy][matrix-authorization-strategy.groovy]]                             |
| [[https://stackoverflow.com/questions/35960883/how-to-unlock-jenkins][Jenkins skip wizzard when initialization]] | -Djenkins.install.runSetupWizard=false                           |
| [[https://stackoverflow.com/questions/35960883/how-to-unlock-jenkins][Jenkins skip wizzard when initialization]] | =instance.setInstallState(InstallState.INITIAL_SETUP_COMPLETED)= |
| [[https://wiki.jenkins.io/display/JENKINS/Slave+To+Master+Access+Control][Slave To Master Access Control]]           | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/00-slave-to-master-access.groovy][00-slave-to-master-access.groovy]]                                 |
| [[https://wiki.jenkins.io/display/JENKINS/CSRF+Protection][CSRF Protection]]                          | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/00-csrf.groovy][00-csrf.groovy]]                                                   |
| Add Jenkins permission                   | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins-permission.groovy][jenkins-permission.groovy]]                                        |
| Disable CLI over Remoting                | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/00-disable-cli-remoting.groovy][00-disable-cli-remoting.groovy]]                                   |
| Disable jnlp                             | =jenkins.setSlaveAgentPort(-1)=                                  |
| [[https://wiki.jenkins.io/display/JENKINS/Authorize+Project+plugin][Access Control for Builds]]                | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins.security.QueueItemAuthenticatorConfiguration.xml][jenkins.security.QueueItemAuthenticatorConfiguration.xml]]         |
** Load Jenkins settings via folder copy
| Name                                 | Comment                                                                  |
|--------------------------------------+--------------------------------------------------------------------------|
| [[https://stackoverflow.com/questions/43691539/create-jenkins-docker-image-with-pre-configured-jobs][Add default jobs]]                     | =Copy jobs/ /usr/share/jenkins/ref/jobs/=                                |
| Copy custom built plugins            | =COPY plugins/*.hpi /usr/share/jenkins/ref/plugins/=                     |
| Use jenkins cli                      | =COPY config/jenkins.properties /usr/share/jenkins/ref/=                 |
| Add jenkins groovy scripts           | =COPY config/*.groovy /usr/share/jenkins/ref/init.groovy.d/=             |
| Configure Jenkins with some defaults | =COPY config/*.xml /usr/share/jenkins/ref/=                              |
| [[https://github.com/jenkinsci/docker/tree/587b2856cd225bb152c4abeeaaa24934c75aa460#script-usage][Install jenkins plugins]]              | =/usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt= |
** Jenkins Plugins
| Plugin                     | Summary                                                                   |
|----------------------------+---------------------------------------------------------------------------|
| [[https://github.com/jenkinsci/kubernetes-plugin][Kubernetes Plugin]]          | Jenkins plugin to run dynamic agents in a Kubernetes/Docker environment   |
| [[https://wiki.jenkins-ci.org/display/JENKINS/Credentials+Plugin][Credentials Plugin]]         | Load the ssh key                                                          |
| [[https://wiki.jenkins.io/display/JENKINS/SiteMonitor+Plugin][SiteMonitor Plugin]]         | Monitor URLs                                                              |
| [[https://wiki.jenkins-ci.org/display/JENKINS/Timestamper][Timestamper Plugin]]         | Add timestamp to job output                                               |
| [[https://wiki.jenkins-ci.org/display/JENKINS/Dashboard+View][Dashboard View Plugin]]      | Create dashboard                                                          |
| [[https://wiki.jenkins.io/display/JENKINS/Log+Parser+Plugin][Log Parser Plugin]]          | Parse the console output and highlight error/warning/info lines.          |
| [[https://wiki.jenkins-ci.org/display/JENKINS/Build-timeout+Plugin][Build-timeout Plugin]]       | Abort if job takes too long                                               |
| [[https://wiki.jenkins-ci.org/display/JENKINS/Naginator+Plugin][Naginator Plugin]]           | Retry failed a job                                                        |
| [[https://wiki.jenkins-ci.org/display/JENKINS/thinBackup][ThinBackup Plugin]]          | Backup jenkins                                                            |
| [[https://plugins.jenkins.io/jobConfigHistory][JobConfigHistory Plugin]]    | Backup job configuration                                                  |
| [[https://wiki.jenkins.io/pages/viewpage.action?pageId=60915753]["Anything Goes" formatter]]  | use JavaScript inside your project description                            |
| [[https://wiki.jenkins.io/display/JENKINS/AnsiColor+Plugin][AnsiColor Plugin]]           | Add support for ANSI escape sequences, including color, to Console Output |
| [[https://wiki.jenkins.io/display/JENKINS/Build+User+Vars+Plugin][Build User Vars Plugin]]     | Describe the user who started the build                                   |
| [[https://wiki.jenkins.io/display/JENKINS/GitLab+Plugin][Gitlab Plugin]]              | Allows GitLab to trigger Jenkins builds                                   |
| [[https://wiki.jenkins.io/display/JENKINS/Workspace+Cleanup+Plugin][Workspace Cleanup]]          | Plugin to delete the build workspace.                                     |
| [[https://wiki.jenkins.io/display/JENKINS/UpdateSites+Manager+plugin][UpdateSites Manager plugin]] | manage update sites, where Jenkins accesses in order to retrieve plugins  |
** Jenkins Git Via Groovy
| Name                                   | Comment                           |
|----------------------------------------+-----------------------------------|
| Git checkout code                      | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/git-checkout.groovy][git-checkout.groovy]]               |
| Get all git commits since last success | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/git-commits-before-fail.groovy][git-commits-before-fail.groovy]]    |
| List git tags and branches             | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/git-list-tags-and-branches.groovy][git-list-tags-and-branches.groovy]] |

** Jenkins networking Via Groovy
| Name                            | Comment                                                                  |
|---------------------------------+--------------------------------------------------------------------------|
| Get hostname                    | =println InetAddress.localHost.canonicalHostName=                        |
| Get IP address                  | =println InetAddress.localHost.hostAddress=                              |
| Get hostname by ip              | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/get-ip-by-hostname.groovy][get-ip-by-hostname.groovy]]                                                |
| validate user input: ip address | =assert ip_address.matches("\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}")= |
** Jenkins with Kubernetes/Docker
| Name                                               | Comment                                                                 |
|----------------------------------------------------+-------------------------------------------------------------------------|
| [[https://github.com/jenkinsci/kubernetes-plugin][Kubernetes Plugin]]                                  | Jenkins plugin to run dynamic agents in a Kubernetes/Docker environment |
| Config jenkins kubernetes plugin                   | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/jenkins-kubernetes-cloud.groovy][jenkins-kubernetes-cloud.groovy]]                                         |
| Cleanup for Docker stale containers/images/volumes | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/docker-cleanup.groovy][docker-cleanup.groovy]]                                                   |
| Jenkins customize docker build args                | =additionalBuildArgs '--build-arg SSH_PRIVATE_KEY...'=                  |
** Groovy Common Errors/Exceptions
| Name               | Comment                                    |
|--------------------+--------------------------------------------|
| Illegal class name | [[https://stackoverflow.com/questions/22839352/jenkins-groovy-post-build-script-to-evaluate-file-with-function][JVM doesn't like class names with a hyphen]] |

** Groovy Basic
| Name                           | Comment                                                   |
|--------------------------------+-----------------------------------------------------------|
| Get environment variables      | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/get-env.groovy][get-env.groovy]], =println env.WORKSPACE=                   |
| Groovy execute command         | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/execute-command.groovy][execute-command.groovy]]                                    |
| [[https://stackoverflow.com/questions/2060427/groovy-grails-how-to-determine-a-data-type][Get data type of a variable]]    | =myObject.getClass()=                                     |
| Print stdout                   | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/print.groovy][print.groovy]] echo 'Action is done', println "Hello World" |
| Use boolean parameter          | if (istrue == "false") {...}                              |
| Basic integer caculation       | def a = 3, b = 7; println "$a + $b = ${a + b}"            |
| Run groovy online              | [[https://groovyconsole.appspot.com][SaaS: Groovy Web console]]                                  |
| Run groovy script from Jenkins | [[https://wiki.jenkins.io/display/JENKINS/Jenkins+Script+Console][Link: Jenkins Script Console]]                              |
| Reference                      | [[http://groovy-lang.org][Link: Apache Groovy]]                                       |
** Groovy String
| Name                           | Comment                                                        |
|--------------------------------+----------------------------------------------------------------|
| Check string startsWith        | =assert s.startsWith("\t")=                                    |
| Trim whitespaces               | s=s.trim()                                                     |
| Concat string                  | =first = 'Joe'; last = 'Smith'; println("Name: $first $last")= |
| [[http://groovy-lang.org/groovy-dev-kit.html#_list_literals][Convert list to string]]         | =l.join(";")=                                                  |
| Create string with multi-lines | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/multi-line-string.groovy][multi-line-string.groovy]]                                       |
| Convert string to list         | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/split-string.groovy][split-string.groovy]]                                            |
| [[http://groovy-lang.org/json.html][Convert string to json]]         | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/string-to-json.groovy][string-to-json.groovy]]                                          |
| Remove tags                    | =input.replaceAll("\\<.*?>","")=                               |
| Regex match                    | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/regexp-match.groovy][regexp-match.groovy]]                                            |
** Groovy Regexp
| Name                   | Comment                        |
|------------------------+--------------------------------|
| [[https://www.ngdc.noaa.gov/wiki/index.php/Regular_Expressions_in_Groovy][Regex case insensitive]] | (item.name == ~/(?i).*NSX.*/ ) |
| Reference              | [[https://www.ngdc.noaa.gov/wiki/index.php/Regular_Expressions_in_Groovy][Regular Expressions in Groovy]]  |
** Groovy Array
| Name                        | Comment                                  |
|-----------------------------+------------------------------------------|
| Iterate a list              | =for(item in [1,2,3,4]){ println item }= |
| Iterate a list              | =(1..3).each { println "Number ${it}"}=  |
| Add item to list            | =def alist = [10, 9, 8]; alist << 7=     |
| List size                   | =def alist = [10, 9, 8]; alist.size()=   |
| Split string with delimiter | ='1128-2'.tokenize('-')=                 |
** Groovy File
| Name                            | Comment                                                                 |
|---------------------------------+-------------------------------------------------------------------------|
| [[https://stackoverflow.com/questions/7729302/how-to-read-a-file-in-groovy-into-a-string][Read file into a string]]         | =String fileContents = new File('/tmp/test.txt).text=                   |
| Read file content as a variable | =def env = System.getenv()=, =def content = readFile("/tmp/test.txt")=  |
| [[https://jenkins.io/doc/pipeline/examples/][Write file in pipeline]]          | writeFile file: "output/my.txt", text: "This is a test"                 |
| [[https://jenkins.io/doc/pipeline/steps/pipeline-utility-steps/#code-readproperties-code-read-properties-from-files-in-the-workspace-or-text][Read a property file]]            | def conf = readProperties file: "${env.WORKSPACE}@script/my.properties" |
| Read and write json files       | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/json-file.groovy][json-file.groovy]]                                                        |
| Obtain a relative path          | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/json-file.groovy][relative-path.groovy]]                                                    |
** Groovy Shell Command
| Name                        | Comment                                             |
|-----------------------------+-----------------------------------------------------|
| Run shell and get output    | def out = sh script: command, returnStdout: true    |
| Run shell and get exit code | def status = sh script: command, returnStatus: true |
** Groovy Dictionary
| Name                | Comment                                        |
|---------------------+------------------------------------------------|
| Create a map        | =def m = ['fruit':'Apple', 'veggie':'Carrot']= |
| Add an item to map  | =m.put('denny','hello')=                       |
| Check if key exists | =m.containsKey('key1')=                        |
| Loop a map          | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/loop-map.groovy][loop-map.groovy]]                                |
** Groovy json
| Name                       | Comment               |
|----------------------------+-----------------------|
| [[http://groovy-lang.org/json.html][Convert string to json]]     | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/string-to-json.groovy][string-to-json.groovy]] |
| Convert dictionary to json | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/dict-to-json.groovy][dict-to-json.groovy]]   |
| Read and write json files  | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/json-file.groovy][json-file.groovy]]      |
** Groovy Date
| Name           | Comment                                                                      |
|----------------+------------------------------------------------------------------------------|
| Date to string | =new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))= |
| String to date | =Date.parse("yyyy-MM-dd'T'HH:mm:ss'Z'", "2001-01-01T00:00:00Z")=             |
| String to date | =Date.parse("yyyy-MM-dd'T'HH:mm:ssZ", "2001-01-01T00:00:00+0000")=           |
** Jenkins Agent
| Name                                | Comment                        |
|-------------------------------------+--------------------------------|
| Check jenkins slave jar version     | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/check-slave-jar-version.groovy][check-slave-jar-version.groovy]] |
| Find dead executors and remove them | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/find-dead-executors.groovy][find-dead-executors.groovy]]     |
| Set env for each agent              | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/set-agent-env.groovy][set-agent-env.groovy]]           |
** Jenkins Maintenance
| Name                            | Comment                                                 |
|---------------------------------+---------------------------------------------------------|
| Delete jenkins job by regexp    | [[https://github.com/Sangwan70/jenkins-groovy/blob/master/delete-job-by-regexp.groovy][delete-job-by-regexp.groovy]]                             |
| Deploy Jenkins via docker       | https://hub.docker.com/r/jenkins/jenkins/               |
| Clean up old builds             | [[https://support.cloudbees.com/hc/en-us/articles/215549798-Best-Strategy-for-Disk-Space-Management-Clean-Up-Old-Builds?mobile_site=true][Link: CloudBees Best Strategy for Disk Space Management]] |
** More Resources
http://groovy-lang.org/documentation.html#gettingstarted

https://github.com/fabric8io/jenkins-docker

